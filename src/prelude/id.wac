var __TAG_i32 = $asm([], i32, "global.get $rt_tag_i32")
var __TAG_i64 = $asm([], i32, "global.get $rt_tag_i64")
var __TAG_f32 = $asm([], i32, "global.get $rt_tag_f32")
var __TAG_f64 = $asm([], i32, "global.get $rt_tag_f64")
var __TAG_bool = $asm([], i32, "global.get $rt_tag_bool")
var __TAG_str = $asm([], i32, "global.get $rt_tag_str")
var __TAG_id = $asm([], i32, "global.get $rt_tag_id")

fn __WAC_id_value(x i64) i32 {
    $asm([], i32, r#"
        local.get $l_0_x
        i32.wrap_i64
    "#)
}

fn __WAC_id_tag(x i64) i32 {
    $asm([], i32, r#"
        local.get $l_0_x
        i64.const 32
        i64.shr_u
        i32.wrap_i64
    "#)
}

fn __WAC_id_release(x i64) {
    var tag = __WAC_id_tag(x)
    var val = __WAC_id_value(x)
    if (
        tag is __TAG_i32 or
        tag is __TAG_i64 or
        tag is __TAG_f32 or
        tag is __TAG_f64 or
        tag is __TAG_bool
    ) {
        # these are primitives, so nothing more to do here
    } else if tag is __TAG_str {
        __WAC_str_release(val)
    } else {
        panic("id_release: unrecognized tag")
    }
}

fn __WAC_id_retain(x i64) {
    var tag = __WAC_id_tag(x)
    var val = __WAC_id_value(x)

    if (
        tag is __TAG_i32 or
        tag is __TAG_i64 or
        tag is __TAG_f32 or
        tag is __TAG_f64 or
        tag is __TAG_bool
    ) {
        # these are primitives, so nothing more to do here
    } else if tag is __TAG_str {
        __WAC_str_retain(val)
    } else {
        panic("id_retain: unrecognized tag")
    }
}
