fn __WAC_id_value(x i64) i32 {
    $asm([], i32, r#"
        local.get $l_0_x
        i32.wrap_i64
    "#)
}

fn __WAC_id_tag(x i64) i32 {
    $asm([], i32, r#"
        local.get $l_0_x
        i64.const 32
        i64.shr_u
        i32.wrap_i64
    "#)
}

fn __WAC_id_release(x i64) {
    var tag = __WAC_typeof_raw(x)
    var val = __WAC_id_value(x)
    if (
        tag is i32 or
        tag is i64 or
        tag is f32 or
        tag is f64 or
        tag is bool
    ) {
        # these are primitives, so nothing more to do here
    } else if tag is str {
        __WAC_str_release(val)
    } else {
        panic("id_release: unrecognized tag")
    }
}

fn __WAC_id_retain(x i64) {
    var tag = __WAC_typeof_raw(x)
    var val = __WAC_id_value(x)

    if (
        tag is i32 or
        tag is i64 or
        tag is f32 or
        tag is f64 or
        tag is bool
    ) {
        # these are primitives, so nothing more to do here
    } else if tag is str {
        __WAC_str_retain(val)
    } else {
        panic("id_retain: unrecognized tag")
    }
}
