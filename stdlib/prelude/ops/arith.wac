# Common traits and their impls

##############################################################################
# Multiply
#
# Add an element to the end of a container
# (e.g. list)
#
##############################################################################
trait Multiply(self, other id) id

impl list for Multiply(self, other id) id {
    var n i32 = other
    var ret = []
    for _ in 0..other {
        Extend(ret, self)
    }
    ret
}

##############################################################################
# Remainder
#
#   Allows overriding the '%' operator
##############################################################################
trait Remainder(self, other id) id

##############################################################################
# str for Remainder
#
# For creating formatted strings
# e.g.:
#   "hello %s" % [10]  # returns "hello 10"
#   "%s %s" % ['space', 'pirate']  # returns "space pirate"
#
# Use '%s' to apply 'str', '%r' to apply 'repr'
# or '%%' if you actually just wanted a '%'.
##############################################################################
impl str for Remainder(self, other id) id {
    __str_format(self, other)
}
