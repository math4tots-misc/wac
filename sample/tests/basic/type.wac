
fn __test_type_str() {
    # static lookup
    Assert(Eq(str(type), "type"))
    Assert(Eq(str(i32), "i32"))
    Assert(Eq(str(TestTypeStrType), "TestTypeStrType"))

    # dynamic lookup
    var x id = type
    Assert(Eq(str(x), "type"))
    x = i32
    Assert(Eq(str(x), "i32"))
    x = TestTypeStrType
    Assert(Eq(str(x), "TestTypeStrType"))
}

enum TestTypeStrType {
}

fn __test_type_ascription() {
    # By default, a non-ascribed number without a decimal
    # point is interpreted as an i32
    var t = type(123)
    AssertSame(t, i32)

    # But the same token can also be interpreted as an f32
    # You just need to manually ascribe the type in some way
    var t = type((123).(f32))
    AssertSame(t, f32)
}
